{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,QAmBtC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAgBC,KAAKC,SAAW,GAExCC,aAAY,WACJH,EACJF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAElBA,MA3BTL,EAAOa,iBAAiB,UAIxB,SAA8BC,GAExBA,EAAMC,iBAEN,IAAMC,EAAkBC,OAAOjB,EAAOK,MAAMa,OACtCC,EAAiBF,OAAOjB,EAAOoB,KAAKF,QAwBhD,SAA4Bd,EAAUC,EAAOgB,GAEnC,IAAK,IAAIC,EAAI,EAAGA,GAAKlB,EAAUkB,GAAK,EAElCC,WAAaF,EAAahB,GAASiB,EAAI,GAEvCnB,EAAcmB,EAAGC,YAAYC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARrB,SAAUuB,EAAKF,EAALpB,MACnDuB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,UAEvEK,OAAM,SAAAP,G,IAAGC,EAAQD,EAARrB,SAAUuB,EAAKF,EAALpB,MAClBuB,EAAA9B,GAAS+B,OAAOI,QAAQ,sBAAqCF,OAAfL,EAAS,QAAYK,OAANJ,EAAM,UA/BrEO,CAFyBjB,OAAOjB,EAAOmC,OAAOjB,OAETC,EAAgBH,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('form');\n\nformEl.addEventListener('submit', createPromiseOnClick);\n\n// ==============================\n\nfunction createPromiseOnClick(event) {\n      \n      event.preventDefault();\n\n      const delayInputValue = Number(formEl.delay.value);\n      const stepInputValue = Number(formEl.step.value);\n      const amountInputValue = Number(formEl.amount.value);\n  \n      ciclePromiseCreate(amountInputValue, stepInputValue, delayInputValue)\n}\n\n// ==============================\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n   \n    setInterval(() => {\n        if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n      }, delay)\n      })\n    }\n\n// ==============================\n\nfunction ciclePromiseCreate(position, delay, firstDelay) {\n      \n          for (let i = 1; i <= position; i += 1) {\n          \n            delayFinal = firstDelay + delay * (i - 1);\n            \n            createPromise(i, delayFinal).then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      }) \n          }\n}\n\n// =============================="],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setInterval","addEventListener","event","preventDefault","delayInputValue","Number","value","stepInputValue","step","firstDelay","i","delayFinal","then","param","_$position","_$delay","$parcel$interopDefault","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$ciclePromiseCreate","amount"],"version":3,"file":"03-promises.b9e43cc8.js.map"}